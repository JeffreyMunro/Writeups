
//Following along with TCM-Academy Malware analysis course
Download virtualBox or use anyform of virtualization you are comfortable with
//I did the setup in Vmware, then switched to virtualbox for convenience sake since the teacher is using virtualbox, and wanted to setup on both.
// these are quick notes currently, will elaborate more for writeup once course is done.
// do this everytime I turn on remnux ( if it doesn't have an assigned IP for the main interface)
// sudo ip link set enp0s17 up
// sudo dhclient -> this will assign ip for the main interface.

Download windows 10
>Setup windows 10 VM

Download REMnux
>setup remnux (also do VM tools)

Download FlareVM
Install FlareVM (install.ps1) "./install.ps1" (took a long time to download, make sure to check if anything failed to download, go to the site of the tool and download)

Set up network to host only -> this ensures an isolated network (If I want to go back to connected to my host, snapshot to a safe instance with no malware detonated & connect to NAT)

Download The malware we will analyze from github (They are zipped,and password protected, and made into a non-executable file) 

To make it executable, remove the end "malz."

Getting the File hash

sha256.exe, md5sum.exe file to get the hash

Submit the hash to virtustotal to see if it matches anything, and will be able to tell if the file is malicious or what type of malware it is.

Basic Static Analysis

floss > pull strings out of binary  "floss.exe file.exe"

PEview you can load the file into it - When you open it up you get an idea of what this malware is made of
PE= Portable Executable

Raw data Vs virtal size 

If the raw data is much more lower than the virtual data, it means that the actual raw data is much more less than what it is when it is run.
You can assume there is more to the binary than is initially available (you can assume it is a packed binary if not close) 

IAT (Import adress table)
Windows API (Application programming Interface)
> Can be telling what malware is doing (Ex.) windowsdownloadURL)

 https://malapi.io A resource that catalogs windows api's that can be used maliciously. 

Packed malware (A compression or encryption mechanism to make malware look different than the original source)

Packed can be use to get past by signature based antivirus. used to make malware look different to antivirus, etc.

A piece of packed malware will not tell you much about it until it actually runs.

pestudio, an 

"MZ" means it is a portable executable.

Dynamic Analyis (Heuristic/Berhavioral Analysis) 

Tells us about Host/Network indicators

Host(Happens to the host the malware is detonating on): Deletes file, installs persistence

Network: Binary calls out to a domain, Downloads a file (because there are a network indicator to show what it is doing).

Remnux is used for inetsim (to simulate internet capability)


Having remnux active will act like there is internet capability, so when you execute the program

Have wireshark active capturing packets

Use psestudio on the file, look for any strings, or any specifiv links to search for when executed.

"favicon.ico" -> Example

In wireshark -> http.request.full_uri contains favicon.ico 
> this will filter the packets for something that specifically is requesting for this.
> Network signature would be the reaching out to a particula URI
When you expand the "hypertext Transfer Protocol, you can see it reaches out to the website (you see in wireshark).

Host Based Signature:

Procmon: tells you information of certain processes and what the processes are doing

Press the filter (cyan icon) -> Since you know the name of the file you can do "contains" and then continue and it should filter.

>It creating a file on the desktop

Host Indicator #2: When you killed inetsim, it had no ping response, it deleted itself. You can see in procmon it did a ping cmd and it met the condition to delete itself.
Program Execution Flow:
If url exists: 
 - Download favicon
 - run favicon icon
else
 - delete from disk
 - do not run

Completion of 1st Lab

RAT.Unknown.Exe
-Hashes Provided

Static: Floss.exe ratfil.exe > floss.txt (this gives us a text file so we can use)

Initial Detonation: Message box "No Soup for you" -> if inetsim is not running

When connected to the internet, tries to connect to a website 

Potential file download also (Get command)

Follow -> Stream (HTTP or TCP, typically the higher the protocol gives better info)

procmon -> Process Name is RAT.Unknown.exe

Operation->contains-> file will narrow down any "file" operations done in procmon, such as createfile, etc.

I can add another filter that looks into the path, as we saw with floss.txt the malware had a pathfile in plain text, so filter to see what it is doing in that path

This reveals some host based indicators because it is creating files onto the machine. 

TCPView

TCP Socket in listening states: 
 

Base64 encoded data from socket on TCP 5555

Netcat: nc -nv(no dns resolution) 10.0.0.3(ip) 5555(port)

echo "base64 encoded information" | base64 -d
(remnux has base64 encoded utility, can used to decodE)returns the text

command injection capability.